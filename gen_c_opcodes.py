import os

from assemble.opcodes import opcode_map


def gen_enum(filename: str, map: dict):
    filepath = os.path.join('src', filename)
    with open(filepath, "w") as f:
        f.write('#ifndef OPCODES_H\n')
        f.write('#define OPCODES_H\n')
        f.write('\n')
        f.write('// Opcode enum values for emulator\n')
        f.write('// Automatically generated by gen_c_opcodes.py\n')
        f.write('\n')
        f.write('enum Opcode {\n')
        for mnemonic, modes in map.items():
            for mode in modes:
                f.write(f'    OP_{mnemonic}_{mode.upper()} = {map[mnemonic][mode]},\n')
        f.write('};\n')
        f.write('\n')
        f.write('#endif /* OPCODES_H */\n')


def main():
    gen_enum('opcodes.h', opcode_map)


if __name__ == "__main__":
    main()
